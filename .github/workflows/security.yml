name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the workflow
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit
        
    - name: Install project dependencies
      run: |
        # Install from pyproject.toml if it exists
        if [ -f "pyproject.toml" ]; then
          echo "Installing from pyproject.toml..."
          pip install -e . || echo "Failed to install from pyproject.toml"
        fi
        
        # Also try requirements.txt
        if [ -f "requirements.txt" ]; then
          echo "Installing from requirements.txt..."
          pip install -r requirements.txt || echo "Failed to install from requirements.txt"
        fi
        
    - name: Run pip-audit
      run: |
        echo "Running pip-audit..."
        pip-audit --desc || echo "pip-audit found issues (exit code: $?)"
        
    - name: Run safety check
      run: |
        echo "Running safety check..."
        safety check || echo "safety check found issues (exit code: $?)"
        
    - name: Summary
      if: always()
      run: |
        echo "✅ Dependency check completed. Check logs for any vulnerabilities."

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install detect-secrets
      run: |
        python -m pip install --upgrade pip
        pip install detect-secrets
        
    - name: Run detect-secrets
      run: |
        # Create or update the baseline
        detect-secrets scan --baseline .secrets.baseline --all-files || detect-secrets scan --all-files > .secrets.baseline
        
    - name: Verify secrets baseline
      run: |
        # Check if there are any unaudited secrets
        if detect-secrets audit .secrets.baseline --report; then
          echo "✅ No unaudited secrets found"
        else
          echo "⚠️ Warning: Potential secrets detected. Please review."
          # Don't fail the build
          exit 0
        fi